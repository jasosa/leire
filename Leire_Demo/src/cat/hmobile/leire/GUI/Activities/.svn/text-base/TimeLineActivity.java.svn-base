package cat.hmobile.leire.GUI.Activities;

import java.util.ArrayList;
import java.util.List;

import android.content.DialogInterface;
import android.content.DialogInterface.OnDismissListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Parcelable;
import android.preference.PreferenceManager;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import cat.hmobile.leire.GUI.Adapters.MicrobloggingMessageListAdapter;
import cat.hmobile.leire.GUI.BackgroundTasks.MicrobloggingTimeLineLoaderTask;
import cat.hmobile.leire.GUI.Dialogs.DefaultDialogBuilder;
import cat.hmobile.leire.GUI.Dialogs.DialogMessage;
import cat.hmobile.leire.GUI.Dialogs.LeireAlertDialog;
import cat.hmobile.leire.GUI.Helpers.ActivityRequests;
import cat.hmobile.leire.GUI.Helpers.ActivityResults;
import cat.hmobile.leire.GUI.Helpers.MicrobloggingBundleHelper;
import cat.hmobile.leire.GUI.Helpers.PreferencesKeys;
import cat.hmobile.leire.GUI.Helpers.Timer;
import cat.hmobile.leire.business.microblogging.IMicrobloggingService;
import cat.hmobile.leire.business.microblogging.MicrobloggingException;
import cat.hmobile.leire.business.microblogging.MicrobloggingService;
import cat.hmobile.leire.entities.microblogging.IMicrobloggingMessage;
import cat.hmobile.leire.entities.microblogging.MicrobloggingUser;
import cat.hmobile.leire.entities.microblogging.MicrobloggingUsersHolder;

public class TimeLineActivity extends GeneralActivity implements OnDismissListener, OnItemClickListener{

	IMicrobloggingService m_twitterService;
	Timer m_refreshTimeLineTimer;
	private ListView m_timeLineList;

	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.twiit_timeline);
		initializeAdapter();
		initializeCommonLayoutElements();
		startMicrobloggingService();
	}
	
	@Override
	protected android.app.Dialog onCreateDialog(int id) {
		
		LeireAlertDialog dialog = null;
		
		switch(id){
		case DialogMessage.DIALOG_NETWORK_ERROR:
			dialog = DefaultDialogBuilder.create(this, R.string.error_title, R.string.network_error);		
			break;
		case DialogMessage.DIALOG_MICROBLOGGING_CREDENTIALS_ERROR:
			dialog = DefaultDialogBuilder.create(this, R.string.error_title, R.string.statusnet_credendtials_error);
			break;
		case DialogMessage.DIALOG_MICROBLOGGING_PARAMS_BLANK:
			dialog = DefaultDialogBuilder.create(this, R.string.error_title, R.string.statusnet_params_blank);
			break;
		}
		
		dialog.setOnDismissListener(this);
		return dialog;
	};
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu)
	{
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.menu_tweettimeline, menu);
		return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item)
	{
		switch(item.getItemId())
		{
		case R.id.menu_sendTweet:
			goToSendTweetActivity();
			break;
		}

		return super.onOptionsItemSelected(item);
	}
	

	@Override
	public void onDismiss(DialogInterface paramDialogInterface) {
		this.finish();
	}

	@Override
	protected void onDestroy() {
		if(m_refreshTimeLineTimer != null)
			m_refreshTimeLineTimer.stop();
		super.onDestroy();
	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
		IMicrobloggingMessage message = (IMicrobloggingMessage) m_timeLineList.getAdapter().getItem(arg2);
		showMessageDetail(message);
	}

	private void initializeAdapter() {
		m_timeLineList = (ListView) findViewById(R.id.timeLineList);
		MicrobloggingMessageListAdapter adapter = new MicrobloggingMessageListAdapter(this, R.layout.twitt_messagerow, new ArrayList<IMicrobloggingMessage>());
		m_timeLineList.setOnItemClickListener(this);
		m_timeLineList.setAdapter(adapter);
	}

	public void showHomeTimeLine(List<IMicrobloggingMessage> messages) {
		copyMessagesToAdapter(messages, (MicrobloggingMessageListAdapter) m_timeLineList.getAdapter());
		m_refreshTimeLineTimer.resume();
	}
	
	private void goToSendTweetActivity() {
		Intent i = new Intent(this, SendTweetActivity.class);
		i.putExtra(ActivityRequests.NEW_TWEET_REQUEST, ActivityResults.NEW_TWEET_REQUEST);
	    this.startActivityForResult(i, ActivityResults.NEW_TWEET_REQUEST);
	}

	private void showMessageDetail(IMicrobloggingMessage message) {
		Intent i = new Intent(this, TweetDetailActivity.class);
		i.putExtras(MicrobloggingBundleHelper.createBundleFromMessage(message));
	    this.startActivityForResult(i, ActivityResults.VIEW_TWEET_DETAIL_REQUEST);	   
	}

	private void copyMessagesToAdapter(List<IMicrobloggingMessage> messages, MicrobloggingMessageListAdapter adapter) {
//		int positionToAdd = 0;
//		for(int i = 0;i<messages.size();i++){
//			int position = adapter.getPosition(messages.get(i));
//			if(position < 0){
//				adapter.insert(messages.get(i), positionToAdd);
//				positionToAdd+=1;
//			}
//			else{
//				adapter.remove(messages.get(i));
//				adapter.insert(messages.get(i), position);
//			}
//		}
		
		int positionToAdd = 0;
		adapter.clear();
		for(IMicrobloggingMessage message : messages){
			adapter.insert(message, positionToAdd);
			positionToAdd++;
		}
	}

	
	private void startMicrobloggingService() {
		try{
			loadPreferencesAndLogin();
			refreshHomeTimeLine(true);
			initializeTimer();
		}
		catch(MicrobloggingException me){
			showDialog(DialogMessage.DIALOG_MICROBLOGGING_PARAMS_BLANK);
		}
	}

	private void loadPreferencesAndLogin() {
		SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this); 
		String userName = preferences.getString(PreferencesKeys.CREDENTIALS_USERNAME, "");
		String password = preferences.getString(PreferencesKeys.CREDENTIALS_PASSWORD, "");
		String apiUrl = preferences.getString(PreferencesKeys.API_URL, "");
		if(checkPreferences(userName, password, apiUrl)){
			m_twitterService = MicrobloggingService.getService();
			m_twitterService.Login(userName,  password);
			m_twitterService.setApiUrlRoot(apiUrl);
			MicrobloggingUser.CURRENT_USER_NAME = userName;
		}
		else{
			throw new MicrobloggingException();
		}
	}
	
	private boolean checkPreferences(String... preferences) {
		for(String param : preferences){
			if(param == null || param.trim().equals(""))
				return false;
		}
		return true;
	}

	private void refreshHomeTimeLine(boolean showLoading) {
		MicrobloggingTimeLineLoaderTask task = new MicrobloggingTimeLineLoaderTask(this,m_twitterService, showLoading);
		task.execute();
	}
	
	private void initializeTimer() {
		m_refreshTimeLineTimer = new Timer(timerHanlder, 20000, 20000);
		m_refreshTimeLineTimer.run();
	}
	
	private Handler timerHanlder = new Handler(){
		@Override
		public void handleMessage(android.os.Message msg) {
			m_refreshTimeLineTimer.stop();
			refreshHomeTimeLine(false);
		};
				
	};
}
